Testing currentRoom:

given a list of Actions, determine the current room 


*Main> [(Move (Room 1 Clear) 1), (Move (Room 2 Clear) 2)]
[Move (Room 1 Clear) 1,Move (Room 2 Clear) 2]
*Main> currentRoom [(Move (Room 1 Clear) 1), (Move (Room 2 Clear) 2)]
Room 1 Clear
*Main> currentRoom [(Move (Room 1 Clear) 1), (OpenHatch (Hatch (1,2) Open) 2)]
Room 1 Clear
*Main> currentRoom [ (OpenHatch (Hatch (1,2) Open) 2), (Move (Room 1 Clear) 1)]
Room 1 Clear
*Main> currentRoom []
*** Exception: The move list must include at least the starting room
*Main> currentRoom [ (OpenHatch (Hatch (1,2) Open) 2)]
*** Exception: The move list must include at least the starting room


testing visitedRooms:

visitedRooms [(Move (Room 1 Clear) 1), (Move (Room 2 Clear) 2)]
[Room 1 Clear,Room 2 Clear]
*Main> visitedRooms [ (OpenHatch (Hatch (1,2) Open) 2), (Move (Room 1 Clear) 1)]
[Room 1 Clear]
*Main> visitedRooms [ (OpenHatch (Hatch (1,2) Open) 2)]
*** Exception: The action list must include at least the starting room
*Main> visitedRooms []
*** Exception: The action list must include at least the starting room


mini = Sub { rooms =
               [ Room 1 Clear,
                 Room 2 LowFlood,
                 Room 3 Fire,
                 Room 4 Clear]
            , hatches =
               [ Hatch (1,2) Open,
                 Hatch (1,3) Open,
                 Hatch (2,3) Open,
                 Hatch (2,4) Open,
                 Hatch (3,4) Closed]
                }



*Main> plusDepth (startGame mini 1)
[GameState (Sub {rooms = [Room 1 Clear,Room 2 LowFlood,Room 3 Fire,Room 4 Clear], hatches = [Hatch (1,2) Open,Hatch (1,3) Open,Hatch (2,3) Open,Hatch (2,4) Open,Hatch (3,4) Closed]}) [Move (Room 2 LowFlood) 2,Move (Room 1 Clear) 0]]


*Main> allMoves (startGame mini 5)
*** Exception: Start room is not found in the description of the sub
*Main> allMoves (startGame mini 1)
[GameState (Sub {rooms = [Room 1 Clear,Room 2 LowFlood,Room 3 Fire,Room 4 Clear], hatches = [Hatch (1,2) Open,Hatch (1,3) Open,Hatch (2,3) Open,Hatch (2,4) Open,Hatch (3,4) Closed]}) [Move (Room 1 Clear) 0],GameState (Sub {rooms = [Room 1 Clear,Room 2 LowFlood,Room 3 Fire,Room 4 Clear], hatches = [Hatch (1,2) Open,Hatch (1,3) Open,Hatch (2,3) Open,Hatch (2,4) Open,Hatch (3,4) Closed]}) [Move (Room 2 LowFlood) 2,Move (Room 1 Clear) 0],GameState (Sub {rooms = [Room 1 Clear,Room 2 LowFlood,Room 3 Fire,Room 4 Clear], hatches = [Hatch (1,2) Open,Hatch (1,3) Open,Hatch (2,3) Open,Hatch (2,4) Open,Hatch (3,4) Closed]}) [Move (Room 4 Clear) 1,Move (Room 2 LowFlood) 2,Move (Room 1 Clear) 0]]
*Main> allMoves (startGame mini 3)
[GameState (Sub {rooms = [Room 1 Clear,Room 2 LowFlood,Room 3 Fire,Room 4 Clear], hatches = [Hatch (1,2) Open,Hatch (1,3) Open,Hatch (2,3) Open,Hatch (2,4) Open,Hatch (3,4) Closed]}) [Move (Room 3 Fire) 0]]

--actions only:  map (\(GameState sub moves) -> moves) (allMoves miniList)

*Main> map (\(GameState sub moves) -> moves) (allMoves miniList)
[[Move (Room 1 Clear) 0],
 [Move (Room 2 LowFlood) 2,Move (Room 1 Clear) 0],
 [Move (Room 4 Clear) 1,Move (Room 2 LowFlood) 2,Move (Room 1 Clear) 0]]

-- startGame wrapper:
*Main> startGame mini 1
[GameState (Sub {rooms = [Room 1 Clear,Room 2 LowFlood,Room 3 Fire,Room 4 Clear], hatches = [Hatch (1,2) Open,Hatch (1,3) Open,Hatch (2,3) Open,Hatch (2,4) Open,Hatch (3,4) Closed]}) [Move (Room 1 Clear) 0]]
*Main> startGame mini 5
*** Exception: Start room is not found in the description of the sub
[GameState (Sub {rooms = [Room 1 Clear,Room 2 LowFlood,Room 3 Fire,Room 4 Clear], hatches = [Hatch (1,2) Open,Hatch (1,3) Open,Hatch (2,3) Open,Hatch (2,4) Open,Hatch (3,4) Closed]}) [Move *Main> startGame mini 3
[GameState (Sub {rooms = [Room 1 Clear,Room 2 LowFlood,Room 3 Fire,Room 4 Clear], hatches = [Hatch (1,2) Open,Hatch (1,3) Open,Hatch (2,3) Open,Hatch (2,4) Open,Hatch (3,4) Closed]}) [Move (Room 3 Fire) 0]]

